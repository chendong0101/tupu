project (message)

set(PROTO_META_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR})
list(APPEND PROTO_FLAGS -I${CMAKE_CURRENT_SOURCE_DIR})
find_program(GRPC_CPP_PLUGIN grpc_cpp_plugin)

file(GLOB PROTOS "${CMAKE_CURRENT_SOURCE_DIR}/*.proto")

if (UNIX AND NOT APPLE)
    set(PROTOBUF_PROTOC_EXECUTABLE /opt/sogou/protobuf3/root/usr/bin/protoc)
endif ()

foreach(FIL ${PROTOS})
  GET_FILENAME_COMPONENT(ABS_FIL ${FIL} ABSOLUTE)
  GET_FILENAME_COMPONENT(FIL_WE ${FIL} NAME_WE)
  message(${FIL})
 
  LIST(APPEND PROTO_SRCS "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.cc")
  LIST(APPEND PROTO_HDRS "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.h")

  LIST(APPEND PROTO_SRCS "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.grpc.pb.cc")
  LIST(APPEND PROTO_HDRS "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.grpc.pb.h")
 
  EXECUTE_PROCESS(
      COMMAND ${PROTOBUF_PROTOC_EXECUTABLE} ${PROTO_FLAGS} --cpp_out=${PROTO_META_BASE_DIR} ${FIL}
      COMMAND ${PROTOBUF_PROTOC_EXECUTABLE} ${PROTO_FLAGS} --grpc_out=${PROTO_META_BASE_DIR} --plugin=protoc-gen-grpc=${GRPC_CPP_PLUGIN} ${FIL}
      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  )
endforeach()

message(${PROTO_SRCS})

set(ProtobufIncludePath ${CMAKE_CURRENT_BINARY_DIR}/..)
add_library(${PROJECT_NAME} ${PROTO_SRCS} ${PROTO_HDRS})
target_include_directories(${PROJECT_NAME} PUBLIC ${ProtobufIncludePath})
